type Player {
    id: ID!
    name: String!
    surname: String!
    position: Position!
}

type Position {
    id: ID!
    name: String!
    shortName: String!
}
interface BaseResponseModel {
    error: Boolean!
}


type SuccessResponseModel implements BaseResponseModel{
    data: [Player]
    error: Boolean!
}

type ErrorResponseModel implements BaseResponseModel {
    error: Boolean!
    errorMessage: String!
}

type Query {
    findAllPlayers: [Player]
}

type Mutation {
    addPlayer(name: String!, surname: String!, position: ID!): BaseResponseModel!
    deletePlayer(id: ID!): BaseResponseModel!
}